// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type FieldType string

const (
	FieldTypeString    FieldType = "string"
	FieldTypeInteger   FieldType = "integer"
	FieldTypeTimestamp FieldType = "timestamp"
	FieldTypeJSON      FieldType = "json"
	FieldTypeBoolean   FieldType = "boolean"
)

func (e FieldType) ToPointer() *FieldType {
	return &e
}

func (e *FieldType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "string":
		fallthrough
	case "integer":
		fallthrough
	case "timestamp":
		fallthrough
	case "json":
		fallthrough
	case "boolean":
		*e = FieldType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FieldType: %v", v)
	}
}
