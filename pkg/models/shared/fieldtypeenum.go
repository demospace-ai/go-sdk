// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type FieldTypeEnum string

const (
	FieldTypeEnumString    FieldTypeEnum = "string"
	FieldTypeEnumInteger   FieldTypeEnum = "integer"
	FieldTypeEnumTimestamp FieldTypeEnum = "timestamp"
	FieldTypeEnumJSON      FieldTypeEnum = "json"
	FieldTypeEnumBoolean   FieldTypeEnum = "boolean"
)

func (e FieldTypeEnum) ToPointer() *FieldTypeEnum {
	return &e
}

func (e *FieldTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "string":
		fallthrough
	case "integer":
		fallthrough
	case "timestamp":
		fallthrough
	case "json":
		fallthrough
	case "boolean":
		*e = FieldTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FieldTypeEnum: %v", v)
	}
}
